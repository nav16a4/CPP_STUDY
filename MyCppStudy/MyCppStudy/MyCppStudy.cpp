// MyCppStudy.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>
//#include "My20210123.h"
#include <iomanip>
#include <typeinfo>
#include "My20210124.h"
#include "My20210125.h"
#include "My20210127.h"
#include "My20210128.h"
#include "My20210131.h"
#include "My20210203.h"
#include "My20210205.h"
#include "My20210215.h"
#include "My20210216.h"
#include "My20210217.h"
#include "My20210223.h"
#include "My20210225.h"
#include "My20210227.h"
int main()
{
	//로거 클래스 및 자동 스트링 제작 클래스 
	//MyStudy20210123::main1();
	//main1()은 1월31일자 와 내용이 겹침
	
	//옵저버 패턴 구현
	//MyStudy20210124::main();

	//템플릿 링버퍼 구현중
	//가변식 캐릭터배열 링버퍼는 이미 구현 완료
	//My20210125::main();

	//ini, 클래스 빌더 패턴
	//My20210127::main();

	//My20210128::main1();

	//fmt::format을 이용한 간단 스트링 제작
	//템플릿을 이용한 자동 클래스 함수 포인터 제작
	//My20210131::main();

	//내용 없음
	//My20210203::main();

	//레퍼러스 전방선언 테스트
	//My20210205::main();

	//문자 인코딩 테스트
	//My20210215::main();
	//2진수 표현 테스트
	//My20210215::main1();

	//옵저버 패턴 업그레이드
	//My20210216::main();

	//shared_mutex 테스트
	//My20210217::main();
	//레퍼런스 추가 테스트
	//My20210217::main1();
	//템플릿을 이용한 자동 인자 입력 연구
	//My20210217::main2();

	//템플릿 인자 자동 입력 연구
	//My20210223::main();

	//void 관련 반환값 템플릿으로 처리해보기 테스트
	//My20210225::main();

	//템플릿 보이드 리턴 관련 질문용 코드 짤려고 임시
	//My20210227::main();
	//std any nullptr넣으면 어떻게 되는지 테스트
	//My20210227::main1();
	//템플릿 클래스 테스트
	My20210227::main2();

}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
